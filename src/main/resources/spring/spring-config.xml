<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!--自动扫描-->
    <context:component-scan base-package="com.ten.lifecat.ssm"/>

    <!--加载数据资源属性文件-->
    <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <!--邮件配置-->
                <value>classpath:mail.properties</value>
                <!--数据库配置-->
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="configProperties"/>
    </bean>

    <!--配置数据库参数及连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--配置SqlSessionFactory处理类-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--配置mapper.xml扫描路径-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--配置entity扫描路径-->
        <property name="typeAliasesPackage" value="com.ten.lifecat.ssm.entity;com.ten.lifecat.ssm.dto"/>
    </bean>

    <!--配置mapper接口扫描路径-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ten.lifecat.ssm.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--邮件服务-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="username" value="${mail.sysEmailAddress}"/>
        <property name="password" value="${mail.password}"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <prop key="mail.smtp.port">${mail.smtp.port}</prop>
            </props>
        </property>
    </bean>

    <!-- 以下为jms+activemq服务，即消息队列服务，需先配置开启activemq.exe服务 -->

    <!--activemq-->
    <!--<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">-->
    <!--<property name="trustAllPackages" value="true"/>-->
    <!--<property name="userName" value="admin"/>-->
    <!--<property name="password" value="admin"/>-->
    <!--</bean>-->

    <!--<amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616"/>-->
    <!--<bean id="queue" class="org.apache.activemq.command.ActiveMQQueue"-->
    <!--c:_0="lifecat.alert.queue"/>-->
    <!--<amq:queue id="lifecatQueue" physicalName="lifecat.alert.queue"/>-->
    <!--<bean id="topic" class="org.apache.activemq.command.ActiveMQTopic"-->
    <!--c:_0="lifecat.alert.topic"/>-->
    <!--<amq:topic id="lifecatTopic" physicalName="lifecat.alert.topic"/>-->

    <!--jms-->
    <!--<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"-->
    <!--c:_0-ref="connectionFactory" p:defaultDestinationName="lifecat.alert.queue"/>-->
    <!--<bean id="lifecatHandler" class="com.ten.jms.AlertHandler"/>-->
    <!--<jms:listener-container connection-factory="connectionFactory">-->
    <!--<jms:listener destination="lifecat.alert.queue" ref="lifecatHandler" method="handleLoginAlert"/>-->
    <!--</jms:listener-container>-->

</beans>